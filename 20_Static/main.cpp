#include <iostream>

// 静态全局变量
// 作用域：从定义该变量的位置开始至源文件结束，全局变量作用域整个程序
// 静态全局变量只初始化一次，防止在其他文件单元中被引用
static int b = 0;

class Base
{
public:
	// 静态成员变量
	// 属于类，不属于对象，创建多个对象，value始终只有一份
	// 某个对象修改了value的数据，也会修改其他对象的数据
	// 程序结束才会释放，不会随对象创建和分配，也不会随对象销毁而释放
	// 可以通过对象名访问或者类名访问，需遵循private、protected和public关键字访问权限
	// 子类和父类共用静态空间区域
	static int value;
	int value2;

	// 静态成员函数
	// 普通成员函数可以访问所有成员，静态成员函数只能访问所有静态成员
	// 编译普通函数会增加this形参。静态成员函数通过类调用，不会增加形参this，不需要当前对象地址
	static void Print()
	{
		std::cout << "Print Value" << value << std::endl;
	}

	// 局部成员函数可以访问静态成员
	void Print2()
	{
		std::cout << value << std::endl;
	}
};

// 必须初始化，静态成员变量需要在类外完成初始化
int Base::value = 2;

int main()
{
	// 静态局部变量
	// 作用域：虽然在全局数据区，但是作用域为局部作用域，定义的函数或者语句结束时，作用域也随之结束
	// 全局数据区分配
	// 首次初始化，在调用后不在初始化
	// 一般在声明处初始化，如果没有显示初始化，会自动初始化为0
	// 程序结束时才会释放
	static int a = 0;
}